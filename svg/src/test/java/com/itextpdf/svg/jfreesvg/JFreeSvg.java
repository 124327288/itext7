package com.itextpdf.svg.jfreesvg;


import com.itextpdf.svg.exceptions.SvgLogMessageConstant;
import com.itextpdf.svg.renderers.SvgIntegrationTest;
import com.itextpdf.test.ITextTest;
import com.itextpdf.test.annotations.LogMessage;
import com.itextpdf.test.annotations.LogMessages;
import com.itextpdf.test.annotations.type.IntegrationTest;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import java.io.IOException;


@Category(IntegrationTest.class)
public class JFreeSvg extends SvgIntegrationTest {

    private static final String SOURCE_FOLDER = "./src/test/resources/com/itextpdf/svg/JFreeSvg/";
    private static final String DESTINATION_FOLDER = "./src/test/resources/com/itextpdf/svg/JFreeSvg/";

    @BeforeClass
    public static void beforeClass() {
        ITextTest.createDestinationFolder(DESTINATION_FOLDER);
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void usingJFreeSvgFromString() throws IOException, InterruptedException {
        //TODO: update cmp_ when RND-1029 fixed
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "rectangleFromString");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void usingJFreeSvgFromFile() throws IOException, InterruptedException {
        //TODO: update cmp_ when RND-1029 fixed
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "rectangleFromFile");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void pieChartByJFreeSvg() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgPieChartFromFile");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    // TODO: Update cmp_ file when DEVSIX-2086 resolved
    @LogMessages(messages = {
            @LogMessage(messageTemplate = SvgLogMessageConstant.UNMAPPEDTAG, count = 80)
    })
    public void barChartByJFreeSvgFromString() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgBarChartFromString");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    // TODO: Update cmp_ file when DEVSIX-2086 resolved
    @LogMessages(messages = {
            @LogMessage(messageTemplate = SvgLogMessageConstant.UNMAPPEDTAG, count = 80)
    })
    public void barChartByJFreeSvgFromFile() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgBarChartFromFile");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void lineChartByJFreeSvgFromString() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgLineChartFromString");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void lineChartByJFreeSvgFromFile() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgLineChartFromFile");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    @Test
    public void xyChartByJFreeSvgFromString() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgXYChartFromString");
    }

    //Do not make changes in svg file because it was generated by JFreeSVG
    
    @Test
    public void xyChartByJFreeSvgFromFile() throws IOException, InterruptedException {
        convertAndCompareVisually(SOURCE_FOLDER, DESTINATION_FOLDER, "usingJFreeSvgXYChartFromFile");
    }
}